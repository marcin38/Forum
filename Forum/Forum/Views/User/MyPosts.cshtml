@using PagedList;
@using PagedList.Mvc;

@model IPagedList<Domain.Models.Post>

<div class="thread-container">
    @foreach (var item in Model)
    {
        bool isAuthenticated = User != null && User.Identity.IsAuthenticated;
        <div class="post-container">
            <div class="post-head">
                <div class="thread-title"> @Html.DisplayFor(m => item.Thread.Title)</div>

                @Html.DisplayFor(m => item.CreationDate)
            </div>
            <div class="post-content">
                @Html.DisplayFor(m => item.PostContent)
                                @if (isAuthenticated)
                                {
                                    <div class="btn-toolbar">
                                        @Html.Partial(MVC.Post.Views.Edit, new Forum.ViewModels.PostEditViewModel { PostContent = item.PostContent, PostId = item.Id })  
                                        <button class="btn btn-success thread-button" type="button" onclick="location.href='@Url.Action(MVC.Thread.Index(item.ThreadId, null))'">To thread</button>
                                    </div>
                                }
            </div>
        </div>
    }
</div>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
new PagedListRenderOptions()
{
    Display = PagedListDisplayMode.IfNeeded,
    LinkToFirstPageFormat = "First",
    LinkToLastPageFormat = "Last"
})
@Html.ActionLink("Back to profile", "ShowProfile")
