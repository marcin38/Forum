@using PagedList;
@using PagedList.Mvc;

@model IPagedList<Domain.Models.Post>

<div class="thread-container">
    @foreach (var item in Model)
    {
        <div class="post-container">
            <div class="post-head">
                <div class="thread-title"> @Html.DisplayFor(m => item.Thread.Title)</div>
                
                @if (User != null && User.Identity.IsAuthenticated)
                {
                    @Html.ActionLink(item.User.Name, MVC.User.ShowProfile(item.AuthorId))
                }
                else
                {
                    @Html.DisplayFor(m => item.User.Name)
                }
                @Html.DisplayFor(m => item.CreationDate)
            </div>
            <div class="post-content">
                @Html.DisplayFor(m => item.PostContent)
            @if (User != null && User.Identity.IsAuthenticated)
            {
                @Html.Partial(MVC.Thread.Views._Report, new Domain.Models.Message() {Subject = String.Format("Reporting post {0}", Html.ActionLink("#" + item.Id.ToString(), MVC.Post.ShowPost(item.Id) ,null).ToString()) }, new ViewDataDictionary { { "postId", item.Id } });
            
                if (item.AuthorId == User.Id)
                {
                    @Html.Partial(MVC.Post.Views.Edit, new Forum.ViewModels.PostEditViewModel { PostContent = item.PostContent, PostId = item.Id });                
                }
            }
            </div>
        </div>
    }
</div>
@if (User != null && User.Identity.IsAuthenticated)
{
    @Html.Partial(MVC.Post.Views.Add, new Domain.Models.Post {ThreadId = int.Parse(ViewContext.RouteData.Values["id"].ToString())});
}

@Html.PagedListPager(Model, page => Url.Action("Index", new { page }), 
new PagedListRenderOptions() { 
    Display = PagedListDisplayMode.IfNeeded, 
    LinkToFirstPageFormat = "First",
    LinkToLastPageFormat = "Last"
})    
@Html.ActionLink("Back to threads", MVC.Category.Index(Model.ElementAt(0).Thread.CategoryId, null))
